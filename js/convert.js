// Generated by CoffeeScript 1.6.3
(function() {
  var ONE_BILLION, ONE_HUNDRED, ONE_MILLION, ONE_THOUSAND, ONE_TRILLION, basics, convert, special;

  basics = ['one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'];

  special = ['twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];

  ONE_HUNDRED = 100;

  ONE_THOUSAND = ONE_HUNDRED * 10;

  ONE_MILLION = ONE_THOUSAND * ONE_THOUSAND;

  ONE_BILLION = ONE_MILLION * ONE_THOUSAND;

  ONE_TRILLION = ONE_BILLION * ONE_THOUSAND;

  convert = function(num) {
    var billions, hundreds, millions, rem, str, tens, thousands;
    if (num < 20) {
      return basics[num - 1];
    } else if (num < ONE_HUNDRED) {
      tens = Math.floor(num / 10);
      rem = num % 10;
      if (rem === 0) {
        return special[tens - 2];
      }
      return special[tens - 2] + " " + convert(num % 10);
    } else if (num < ONE_THOUSAND) {
      hundreds = Math.floor(num / ONE_HUNDRED);
      rem = num % ONE_HUNDRED;
      str = basics[hundreds - 1] + " hundred";
      if (rem === 0) {
        return str;
      }
      return str + " " + convert(rem);
    } else if (num < ONE_MILLION) {
      thousands = Math.floor(num / ONE_THOUSAND);
      rem = num % ONE_THOUSAND;
      str = convert(thousands) + " thousand";
      if (rem === 0) {
        return str;
      }
      return str + " " + convert(rem);
    } else if (num < ONE_BILLION) {
      millions = Math.floor(num / ONE_MILLION);
      rem = num % ONE_MILLION;
      str = convert(millions) + " million";
      if (rem === 0) {
        return str;
      }
      return str + " " + convert(rem);
    } else if (num < ONE_TRILLION) {
      billions = Math.floor(num / ONE_BILLION);
      rem = num % ONE_BILLION;
      str = convert(billions) + " billion";
      if (rem === 0) {
        return str;
      }
      return str + " " + convert(rem);
    }
  };

  exports.convert = convert;

}).call(this);
